% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_surrogate.R
\name{find_twins}
\alias{find_twins}
\title{Find the 'twin' status in embedding matrix}
\usage{
find_twins(
  dmat,
  twin_op = "RM",
  time_idx,
  phase_lock = TRUE,
  period = 12,
  lim = 10,
  range,
  nn
)
}
\arguments{
\item{dmat}{A distance matrix}

\item{twin_op}{Character, which can be "RM" or "NN"
if "RM", twin search is based on recurrence matrix,
otherwise is based on NN twin method}

\item{time_idx}{Vector of time index}

\item{phase_lock}{Logical, if TRUE, twin search is limited to the points having
time index same with the target (a.k.a. phase-locked twin surrogate, Ushio et al. 2018)}

\item{period}{Integer, the phase period (only works when phase_lock == TRUE)}

\item{lim, }{Integer, the minimum No. of twins (only works when twin_op == "RM")}

\item{range}{Vector, the range of threshold in recurrence matrix
(only works when twin_op == "RM", see also \code{\link{gen_rec_mat}})}

\item{nn}{Integer, the number of nearest neighbour points
(only works when twin_op != "RM")}
}
\description{
\code{find_twins} returns a list preserving dynamical 'twins' for each time point
Algorithm is adopted from Thiel et al. (2006), Europhys Lett and Ushio et al. (2018)
Nature, with an extension that includes NN (nearest neighbour) twin method
}
